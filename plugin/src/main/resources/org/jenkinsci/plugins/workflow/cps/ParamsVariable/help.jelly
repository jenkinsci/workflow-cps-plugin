<?xml version="1.0" encoding="UTF-8"?>
<!--
The MIT License

Copyright 2016 CloudBees, Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core">
    <p>
        Exposes all parameters defined in the build as a read-only map with variously typed values. Example:
    </p>
    <pre><code>if (params.BOOLEAN_PARAM_NAME) {doSomething()}</code></pre>
    <p>
        or to supply a nontrivial default value:
    </p>
    <pre><code>if (params.getOrDefault('BOOLEAN_PARAM_NAME', true)) {doSomething()}</code></pre>
    <p>
        Note for multibranch (<code>Jenkinsfile</code>) usage: the <code>properties</code> step allows you to define job properties,
        but these take effect when the step is run, whereas build parameter definitions are generally consulted before the build begins.
        As a convenience, any parameters <em>currently</em> defined in the job which have default values will also be listed in this map.
        That allows you to write, for example:
    </p>
    <pre><code>properties([parameters([string(name: 'BRANCH', defaultValue: 'master')])])
git url: 'â€¦', branch: params.BRANCH
</code></pre>
    <p>
        and be assured that the <code>master</code> branch will be checked out even in the initial build of a branch project,
        or if the previous build did not specify parameters or used a different parameter name.
    </p>
</j:jelly>
